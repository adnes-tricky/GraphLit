{"version":3,"file":"force-layout.js","sources":["../node_modules/d3-force/src/center.js","../node_modules/d3-quadtree/src/add.js","../node_modules/d3-quadtree/src/cover.js","../node_modules/d3-quadtree/src/data.js","../node_modules/d3-quadtree/src/extent.js","../node_modules/d3-quadtree/src/quad.js","../node_modules/d3-quadtree/src/find.js","../node_modules/d3-quadtree/src/remove.js","../node_modules/d3-quadtree/src/root.js","../node_modules/d3-quadtree/src/size.js","../node_modules/d3-quadtree/src/visit.js","../node_modules/d3-quadtree/src/visitAfter.js","../node_modules/d3-quadtree/src/x.js","../node_modules/d3-quadtree/src/y.js","../node_modules/d3-quadtree/src/quadtree.js","../node_modules/d3-force/src/constant.js","../node_modules/d3-force/src/jiggle.js","../node_modules/d3-force/src/collide.js","../node_modules/d3-force/src/link.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-timer/src/timer.js","../node_modules/d3-force/src/lcg.js","../node_modules/d3-force/src/simulation.js","../node_modules/d3-force/src/manyBody.js","../node_modules/d3-force/src/radial.js","../node_modules/d3-force/src/x.js","../node_modules/d3-force/src/y.js","../src/layouts/force.ts"],"sourcesContent":["export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import { Ref, toRef, watch } from \"vue\"\nimport * as d3 from \"d3-force\"\nimport { Edges, NodePositions, Nodes, Position } from \"@/common/types\"\nimport { OnClickHandler, OnDragHandler } from \"@/common/types\"\nimport { LayoutActivateParameters, LayoutHandler } from \"./handler\"\n\nexport interface ForceNodeDatum extends d3.SimulationNodeDatum {\n  id: string\n}\n\nexport interface ForceEdgeDatum {\n  source: string\n  target: string\n}\n\ntype d3Type = typeof d3\n\ntype CreateSimulationFunction = (\n  d3: d3Type,\n  nodes: ForceNodeDatum[],\n  edges: ForceEdgeDatum[]\n) => d3.Simulation<ForceNodeDatum, ForceEdgeDatum>\n\nexport type ForceLayoutParameters = {\n  positionFixedByDrag?: boolean\n  positionFixedByClickWithAltKey?: boolean\n  createSimulation?: CreateSimulationFunction\n}\n\nexport class ForceLayout implements LayoutHandler {\n  private onDeactivate?: () => void\n\n  constructor(private options: ForceLayoutParameters = {}) {}\n\n  activate(parameters: LayoutActivateParameters): void {\n    const { nodePositions, nodes, edges, emitter, svgPanZoom } = parameters\n    let { nodeLayouts, nodeLayoutMap } = this.buildNodeLayouts(nodes.value, nodePositions, {\n      x: 0,\n      y: 0,\n    })\n\n    const simulation = this.createSimulation(\n      nodeLayouts,\n      this.forceLayoutEdges(edges.value, nodes.value)\n    )\n    simulation.on(\"tick\", () => {\n      for (const node of nodeLayouts) {\n        const layout = nodePositions.value?.[node.id]\n        if (layout) {\n          layout.x = node.x ?? 0\n          layout.y = node.y ?? 0\n        }\n      }\n    })\n\n    const restartSimulation = () => {\n      simulation.alpha(0.1).restart()\n    }\n\n    const onDrag: OnDragHandler = positions => {\n      for (const [id, pos] of Object.entries(positions)) {\n        const nodePos = nodeLayoutMap[id]\n        nodePos.fx = pos.x\n        nodePos.fy = pos.y\n      }\n      restartSimulation()\n    }\n\n    const onDragEnd: OnDragHandler = positions => {\n      for (const [id, pos] of Object.entries(positions)) {\n        const layout = this.getNodeLayout(nodePositions, id)\n        const nodePos: d3.SimulationNodeDatum = nodeLayoutMap?.[id] ?? { x: 0, y: 0 }\n        if (layout.value.fixed || this.options.positionFixedByDrag) {\n          nodePos.fx = pos.x\n          nodePos.fy = pos.y\n          layout.value.fixed = true\n        } else {\n          nodePos.x = pos.x\n          nodePos.y = pos.y\n          delete nodePos.fx\n          delete nodePos.fy\n        }\n      }\n      restartSimulation()\n    }\n\n    const onClick: OnClickHandler = ({ node, event }) => {\n      if (this.options.positionFixedByClickWithAltKey && event.altKey) {\n        const layout = this.getNodeLayout(nodePositions, node)\n        let nodePos: ForceNodeDatum | undefined = nodeLayoutMap?.[node]\n        if (!nodePos) {\n          nodePos = { id: node, x: 0, y: 0 }\n          nodeLayoutMap[node] = nodePos\n        }\n\n        if (layout.value.fixed) {\n          // unfix\n          delete layout.value.fixed\n          nodePos.x = nodePos.fx || nodePos.x\n          nodePos.y = nodePos.fy || nodePos.y\n          delete nodePos.fx\n          delete nodePos.fy\n        } else {\n          // fix\n          layout.value.fixed = true\n          nodePos.fx = nodePos.x\n          nodePos.fy = nodePos.y\n        }\n        restartSimulation()\n      }\n    }\n\n    const stopNetworkWatch = watch(\n      () => [\n        Object.keys(nodes.value),\n        // Watch only for changes in links, not all properties of the edge objects.\n        Object.values(edges.value).map(e => `${e.source}=${e.target}`),\n      ],\n      () => {\n        // set new node's position to center of the view\n        const area = svgPanZoom.getViewArea()\n        ;({ nodeLayouts, nodeLayoutMap } = this.buildNodeLayouts(\n          nodes.value,\n          nodePositions,\n          area.center\n        ))\n        simulation.nodes(nodeLayouts)\n        const forceEdges = simulation.force<d3.ForceLink<ForceNodeDatum, ForceEdgeDatum>>(\"edge\")\n        if (forceEdges) {\n          forceEdges.links(this.forceLayoutEdges(edges.value, nodes.value))\n        }\n        restartSimulation()\n      }\n    )\n\n    emitter.on(\"node:dragstart\", onDrag)\n    emitter.on(\"node:pointermove\", onDrag)\n    emitter.on(\"node:dragend\", onDragEnd)\n    emitter.on(\"node:click\", onClick)\n\n    this.onDeactivate = () => {\n      simulation.stop()\n      stopNetworkWatch()\n      emitter.off(\"node:dragstart\", onDrag)\n      emitter.off(\"node:pointermove\", onDrag)\n      emitter.off(\"node:dragend\", onDragEnd)\n      emitter.off(\"node:click\", onClick)\n    }\n  }\n\n  deactivate(): void {\n    if (this.onDeactivate) {\n      this.onDeactivate()\n    }\n  }\n\n  private createSimulation(\n    nodes: ForceNodeDatum[],\n    edges: ForceEdgeDatum[]\n  ): d3.Simulation<ForceNodeDatum, ForceEdgeDatum> {\n    if (this.options.createSimulation) {\n      return this.options.createSimulation(d3, nodes, edges)\n    } else {\n      const forceLink = d3.forceLink<ForceNodeDatum, ForceEdgeDatum>(edges).id(d => d.id)\n      return d3\n        .forceSimulation(nodes)\n        .force(\"edge\", forceLink.distance(100))\n        .force(\"charge\", d3.forceManyBody())\n        .force(\"collide\", d3.forceCollide(50).strength(0.2))\n        .force(\"center\", d3.forceCenter().strength(0.05))\n        .alphaMin(0.001)\n    }\n  }\n\n  private buildNodeLayouts(\n    nodes: Readonly<Nodes>,\n    nodePositions: Ref<NodePositions>,\n    newPosition: Position\n  ) {\n    const newNodes = Object.keys(nodes).filter(n => !(n in nodePositions.value))\n    for (const nodeId of newNodes) {\n      nodePositions.value[nodeId] = { ...newPosition }\n    }\n\n    const nodeLayouts = this.forceNodeLayouts(nodePositions.value)\n    const nodeLayoutMap = Object.fromEntries(nodeLayouts.map(n => [n.id, n]))\n    return { nodeLayouts, nodeLayoutMap }\n  }\n\n  private forceNodeLayouts(layouts: NodePositions): ForceNodeDatum[] {\n    return Object.entries(layouts).map(([id, v]) => {\n      return v.fixed ? { id, ...v, fx: v.x, fy: v.y } : { id, ...v }\n    })\n  }\n\n  private forceLayoutEdges(edges: Edges, nodes: Nodes): ForceEdgeDatum[] {\n    // d3-force replaces the source/target in the edge with NodeDatum\n    // objects, so build own link objects.\n    return Object.values(edges)\n      .filter(edge => edge.source in nodes && edge.target in nodes)\n      .map(v => ({\n        source: v.source,\n        target: v.target,\n      }))\n  }\n\n  private getNodeLayout(nodePositions: Ref<NodePositions>, node: string) {\n    const layout = toRef(nodePositions.value, node)\n    if (!layout.value) {\n      layout.value = { x: 0, y: 0 }\n    }\n    return layout\n  }\n}\n"],"names":["center","x","y","nodes","strength","force","i","n","node","sx","sy","_","tree_add","d","add","tree","parent","leaf","x0","y0","x1","y1","xm","ym","xp","yp","right","bottom","j","addAll","data","xz","yz","tree_cover","z","tree_data","tree_extent","Quad","tree_find","radius","x2","y2","x3","y3","quads","q","dx","dy","d2","tree_remove","retainer","previous","next","removeAll","tree_root","tree_size","size","tree_visit","callback","child","tree_visitAfter","defaultX","tree_x","defaultY","tree_y","quadtree","Quadtree","leaf_copy","copy","treeProto","tree_addAll","tree_removeAll","constant","jiggle","random","collide","radii","iterations","xi","yi","ri","ri2","k","prepare","apply","quad","rj","r","l","initialize","_nodes","_random","index","find","nodeById","nodeId","link","links","id","defaultStrength","strengths","distance","distances","count","bias","alpha","source","target","m","initializeStrength","initializeDistance","noop","dispatch","t","Dispatch","parseTypenames","typenames","types","name","typename","T","get","set","type","that","args","c","frame","timeout","interval","pokeDelay","taskHead","taskTail","clockLast","clockNow","clockSkew","clock","setFrame","f","now","clearNow","Timer","timer","delay","time","sleep","timerFlush","e","wake","nap","poke","t0","t1","t2","a","lcg","s","initialRadius","initialAngle","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","step","event","tick","initializeNodes","angle","initializeForce","closest","manyBody","distanceMin2","distanceMax2","theta2","accumulate","weight","w","radial","radiuses","ForceLayout","options","parameters","nodePositions","edges","emitter","svgPanZoom","nodeLayouts","nodeLayoutMap","layout","_a","_b","_c","restartSimulation","onDrag","positions","pos","nodePos","onDragEnd","onClick","stopNetworkWatch","watch","area","forceEdges","d3","forceLink","d3.forceLink","d3.forceSimulation","d3.forceManyBody","d3.forceCollide","d3.forceCenter","newPosition","newNodes","__spreadValues","layouts","v","__spreadProps","edge","toRef"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}