import type { ShapeStyle, NodeLabelStyle, OppositeNode } from '../..';
import type { DefineComponent, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes, PropType as __PropType } from 'vue';
import { Position } from '../../common/types';
declare const _sfc_main: DefineComponent<{
    id: {
        type: __PropType<string>;
        required: true;
    };
    state: {
        type: __PropType<{
            id: string;
            shape: ShapeStyle;
            staticShape: ShapeStyle;
            label: NodeLabelStyle;
            labelText: string;
            selected: boolean;
            hovered: boolean;
            draggable: boolean;
            selectable: number | boolean;
            zIndex: number;
            oppositeNodeIds: Record<string, string>;
            oppositeNodes: Record<string, OppositeNode>;
        }>;
        required: true;
    };
    pos: {
        type: __PropType<Position | undefined>;
        required: false;
        default: undefined;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
    id: {
        type: __PropType<string>;
        required: true;
    };
    state: {
        type: __PropType<{
            id: string;
            shape: ShapeStyle;
            staticShape: ShapeStyle;
            label: NodeLabelStyle;
            labelText: string;
            selected: boolean;
            hovered: boolean;
            draggable: boolean;
            selectable: number | boolean;
            zIndex: number;
            oppositeNodeIds: Record<string, string>;
            oppositeNodes: Record<string, OppositeNode>;
        }>;
        required: true;
    };
    pos: {
        type: __PropType<Position | undefined>;
        required: false;
        default: undefined;
    };
}>>, {
    pos: Position | undefined;
}>;
export default _sfc_main;
