{"version":3,"file":"force-layout.mjs","sources":["../node_modules/d3-force/src/center.js","../node_modules/d3-quadtree/src/add.js","../node_modules/d3-quadtree/src/cover.js","../node_modules/d3-quadtree/src/data.js","../node_modules/d3-quadtree/src/extent.js","../node_modules/d3-quadtree/src/quad.js","../node_modules/d3-quadtree/src/find.js","../node_modules/d3-quadtree/src/remove.js","../node_modules/d3-quadtree/src/root.js","../node_modules/d3-quadtree/src/size.js","../node_modules/d3-quadtree/src/visit.js","../node_modules/d3-quadtree/src/visitAfter.js","../node_modules/d3-quadtree/src/x.js","../node_modules/d3-quadtree/src/y.js","../node_modules/d3-quadtree/src/quadtree.js","../node_modules/d3-force/src/constant.js","../node_modules/d3-force/src/jiggle.js","../node_modules/d3-force/src/collide.js","../node_modules/d3-force/src/link.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-timer/src/timer.js","../node_modules/d3-force/src/lcg.js","../node_modules/d3-force/src/simulation.js","../node_modules/d3-force/src/manyBody.js","../node_modules/d3-force/src/radial.js","../node_modules/d3-force/src/x.js","../node_modules/d3-force/src/y.js","../src/layouts/force.ts"],"sourcesContent":["export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import { Ref, toRef, watch } from \"vue\"\nimport * as d3 from \"d3-force\"\nimport { Edges, NodePositions, Nodes, Position } from \"@/common/types\"\nimport { OnClickHandler, OnDragHandler } from \"@/common/types\"\nimport { LayoutActivateParameters, LayoutHandler } from \"./handler\"\n\nexport interface ForceNodeDatum extends d3.SimulationNodeDatum {\n  id: string\n}\n\nexport interface ForceEdgeDatum {\n  source: string\n  target: string\n}\n\ntype d3Type = typeof d3\n\ntype CreateSimulationFunction = (\n  d3: d3Type,\n  nodes: ForceNodeDatum[],\n  edges: ForceEdgeDatum[]\n) => d3.Simulation<ForceNodeDatum, ForceEdgeDatum>\n\nexport type ForceLayoutParameters = {\n  positionFixedByDrag?: boolean\n  positionFixedByClickWithAltKey?: boolean\n  createSimulation?: CreateSimulationFunction\n}\n\nexport class ForceLayout implements LayoutHandler {\n  private onDeactivate?: () => void\n\n  constructor(private options: ForceLayoutParameters = {}) {}\n\n  activate(parameters: LayoutActivateParameters): void {\n    const { nodePositions, nodes, edges, emitter, svgPanZoom } = parameters\n    let { nodeLayouts, nodeLayoutMap } = this.buildNodeLayouts(nodes.value, nodePositions, {\n      x: 0,\n      y: 0,\n    })\n\n    const simulation = this.createSimulation(\n      nodeLayouts,\n      this.forceLayoutEdges(edges.value, nodes.value)\n    )\n    simulation.on(\"tick\", () => {\n      for (const node of nodeLayouts) {\n        const layout = nodePositions.value?.[node.id]\n        if (layout) {\n          layout.x = node.x ?? 0\n          layout.y = node.y ?? 0\n        }\n      }\n    })\n\n    const restartSimulation = () => {\n      simulation.alpha(0.1).restart()\n    }\n\n    const onDrag: OnDragHandler = positions => {\n      for (const [id, pos] of Object.entries(positions)) {\n        const nodePos = nodeLayoutMap[id]\n        nodePos.fx = pos.x\n        nodePos.fy = pos.y\n      }\n      restartSimulation()\n    }\n\n    const onDragEnd: OnDragHandler = positions => {\n      for (const [id, pos] of Object.entries(positions)) {\n        const layout = this.getNodeLayout(nodePositions, id)\n        const nodePos: d3.SimulationNodeDatum = nodeLayoutMap?.[id] ?? { x: 0, y: 0 }\n        if (layout.value.fixed || this.options.positionFixedByDrag) {\n          nodePos.fx = pos.x\n          nodePos.fy = pos.y\n          layout.value.fixed = true\n        } else {\n          nodePos.x = pos.x\n          nodePos.y = pos.y\n          delete nodePos.fx\n          delete nodePos.fy\n        }\n      }\n      restartSimulation()\n    }\n\n    const onClick: OnClickHandler = ({ node, event }) => {\n      if (this.options.positionFixedByClickWithAltKey && event.altKey) {\n        const layout = this.getNodeLayout(nodePositions, node)\n        let nodePos: ForceNodeDatum | undefined = nodeLayoutMap?.[node]\n        if (!nodePos) {\n          nodePos = { id: node, x: 0, y: 0 }\n          nodeLayoutMap[node] = nodePos\n        }\n\n        if (layout.value.fixed) {\n          // unfix\n          delete layout.value.fixed\n          nodePos.x = nodePos.fx || nodePos.x\n          nodePos.y = nodePos.fy || nodePos.y\n          delete nodePos.fx\n          delete nodePos.fy\n        } else {\n          // fix\n          layout.value.fixed = true\n          nodePos.fx = nodePos.x\n          nodePos.fy = nodePos.y\n        }\n        restartSimulation()\n      }\n    }\n\n    const stopNetworkWatch = watch(\n      () => [\n        Object.keys(nodes.value),\n        // Watch only for changes in links, not all properties of the edge objects.\n        Object.values(edges.value).map(e => `${e.source}=${e.target}`),\n      ],\n      () => {\n        // set new node's position to center of the view\n        const area = svgPanZoom.getViewArea()\n        ;({ nodeLayouts, nodeLayoutMap } = this.buildNodeLayouts(\n          nodes.value,\n          nodePositions,\n          area.center\n        ))\n        simulation.nodes(nodeLayouts)\n        const forceEdges = simulation.force<d3.ForceLink<ForceNodeDatum, ForceEdgeDatum>>(\"edge\")\n        if (forceEdges) {\n          forceEdges.links(this.forceLayoutEdges(edges.value, nodes.value))\n        }\n        restartSimulation()\n      }\n    )\n\n    emitter.on(\"node:dragstart\", onDrag)\n    emitter.on(\"node:pointermove\", onDrag)\n    emitter.on(\"node:dragend\", onDragEnd)\n    emitter.on(\"node:click\", onClick)\n\n    this.onDeactivate = () => {\n      simulation.stop()\n      stopNetworkWatch()\n      emitter.off(\"node:dragstart\", onDrag)\n      emitter.off(\"node:pointermove\", onDrag)\n      emitter.off(\"node:dragend\", onDragEnd)\n      emitter.off(\"node:click\", onClick)\n    }\n  }\n\n  deactivate(): void {\n    if (this.onDeactivate) {\n      this.onDeactivate()\n    }\n  }\n\n  private createSimulation(\n    nodes: ForceNodeDatum[],\n    edges: ForceEdgeDatum[]\n  ): d3.Simulation<ForceNodeDatum, ForceEdgeDatum> {\n    if (this.options.createSimulation) {\n      return this.options.createSimulation(d3, nodes, edges)\n    } else {\n      const forceLink = d3.forceLink<ForceNodeDatum, ForceEdgeDatum>(edges).id(d => d.id)\n      return d3\n        .forceSimulation(nodes)\n        .force(\"edge\", forceLink.distance(100))\n        .force(\"charge\", d3.forceManyBody())\n        .force(\"collide\", d3.forceCollide(50).strength(0.2))\n        .force(\"center\", d3.forceCenter().strength(0.05))\n        .alphaMin(0.001)\n    }\n  }\n\n  private buildNodeLayouts(\n    nodes: Readonly<Nodes>,\n    nodePositions: Ref<NodePositions>,\n    newPosition: Position\n  ) {\n    const newNodes = Object.keys(nodes).filter(n => !(n in nodePositions.value))\n    for (const nodeId of newNodes) {\n      nodePositions.value[nodeId] = { ...newPosition }\n    }\n\n    const nodeLayouts = this.forceNodeLayouts(nodePositions.value)\n    const nodeLayoutMap = Object.fromEntries(nodeLayouts.map(n => [n.id, n]))\n    return { nodeLayouts, nodeLayoutMap }\n  }\n\n  private forceNodeLayouts(layouts: NodePositions): ForceNodeDatum[] {\n    return Object.entries(layouts).map(([id, v]) => {\n      return v.fixed ? { id, ...v, fx: v.x, fy: v.y } : { id, ...v }\n    })\n  }\n\n  private forceLayoutEdges(edges: Edges, nodes: Nodes): ForceEdgeDatum[] {\n    // d3-force replaces the source/target in the edge with NodeDatum\n    // objects, so build own link objects.\n    return Object.values(edges)\n      .filter(edge => edge.source in nodes && edge.target in nodes)\n      .map(v => ({\n        source: v.source,\n        target: v.target,\n      }))\n  }\n\n  private getNodeLayout(nodePositions: Ref<NodePositions>, node: string) {\n    const layout = toRef(nodePositions.value, node)\n    if (!layout.value) {\n      layout.value = { x: 0, y: 0 }\n    }\n    return layout\n  }\n}\n"],"names":["center","x","y","nodes","strength","force","i","n","node","sx","sy","_","tree_add","d","add","tree","parent","leaf","x0","y0","x1","y1","xm","ym","xp","yp","right","bottom","j","addAll","data","xz","yz","tree_cover","z","tree_data","tree_extent","Quad","tree_find","radius","x2","y2","x3","y3","quads","q","dx","dy","d2","tree_remove","retainer","previous","next","removeAll","tree_root","tree_size","size","tree_visit","callback","child","tree_visitAfter","defaultX","tree_x","defaultY","tree_y","quadtree","Quadtree","leaf_copy","copy","treeProto","tree_addAll","tree_removeAll","constant","jiggle","random","collide","radii","iterations","xi","yi","ri","ri2","k","prepare","apply","quad","rj","r","l","initialize","_nodes","_random","index","find","nodeById","nodeId","link","links","id","defaultStrength","strengths","distance","distances","count","bias","alpha","source","target","b","m","initializeStrength","initializeDistance","noop","dispatch","t","Dispatch","parseTypenames","typenames","types","name","typename","T","get","set","type","that","args","c","frame","timeout","interval","pokeDelay","taskHead","taskTail","clockLast","clockNow","clockSkew","clock","setFrame","f","now","clearNow","Timer","timer","delay","time","sleep","timerFlush","e","wake","nap","poke","t0","t1","t2","a","lcg","s","initialRadius","initialAngle","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","step","event","tick","initializeNodes","angle","initializeForce","closest","manyBody","distanceMin2","distanceMax2","theta2","accumulate","weight","w","radial","radiuses","ForceLayout","options","parameters","nodePositions","edges","emitter","svgPanZoom","nodeLayouts","nodeLayoutMap","layout","_a","_b","_c","restartSimulation","onDrag","positions","pos","nodePos","onDragEnd","onClick","stopNetworkWatch","watch","area","forceEdges","d3","forceLink","d3.forceLink","d3.forceSimulation","d3.forceManyBody","d3.forceCollide","d3.forceCenter","newPosition","newNodes","__spreadValues","layouts","v","__spreadProps","edge","toRef"],"mappings":"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"}