import type { Edge } from '../../common/types';
import type { EdgeConfig } from '../..';
import type { DefineComponent, Ref, ComputedRef, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes } from 'vue';
declare const _sfc_main: DefineComponent<{
    id: {
        type: StringConstructor;
        required: true;
    };
    state: {
        type: null;
        required: true;
    };
    sourcePos: {
        type: null;
        required: false;
        default: undefined;
    };
    targetPos: {
        type: null;
        required: false;
        default: undefined;
    };
}, {
    config: EdgeConfig<Edge>;
    VLine: DefineComponent<{
        p1: {
            type: null;
            required: true;
        };
        p2: {
            type: null;
            required: true;
        };
        config: {
            type: null;
            required: true;
        };
    }, {
        props: any;
        scale: Ref<number>;
        strokeWidth: ComputedRef<number>;
        strokeDasharray: ComputedRef<string | number | undefined>;
        animationSpeed: ComputedRef<string | undefined>;
    }, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
        p1: {
            type: null;
            required: true;
        };
        p2: {
            type: null;
            required: true;
        };
        config: {
            type: null;
            required: true;
        };
    }>>, {}>;
    VArc: DefineComponent<{
        p1: {
            type: null;
            required: true;
        };
        p2: {
            type: null;
            required: true;
        };
        radius: {
            type: ArrayConstructor;
            required: true;
        };
        isLargeArc: {
            type: BooleanConstructor;
            required: true;
        };
        isClockwise: {
            type: BooleanConstructor;
            required: true;
        };
        config: {
            type: null;
            required: true;
        };
    }, {
        props: any;
        scale: Ref<number>;
        strokeWidth: ComputedRef<number>;
        strokeDasharray: ComputedRef<string | number | undefined>;
        animationSpeed: ComputedRef<string | undefined>;
        pathD: ComputedRef<string>;
    }, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
        p1: {
            type: null;
            required: true;
        };
        p2: {
            type: null;
            required: true;
        };
        radius: {
            type: ArrayConstructor;
            required: true;
        };
        isLargeArc: {
            type: BooleanConstructor;
            required: true;
        };
        isClockwise: {
            type: BooleanConstructor;
            required: true;
        };
        config: {
            type: null;
            required: true;
        };
    }>>, {}>;
    VEdgeCurved: DefineComponent<{
        state: {
            type: null;
            required: true;
        };
        config: {
            type: null;
            required: true;
        };
        markerStart: {
            type: StringConstructor;
            required: false;
            default: undefined;
        };
        markerEnd: {
            type: StringConstructor;
            required: false;
            default: undefined;
        };
    }, {
        props: any;
        scale: Ref<number>;
        pathD: ComputedRef<string>;
        strokeWidth: ComputedRef<number>;
        strokeDasharray: ComputedRef<string | number | undefined>;
        animationSpeed: ComputedRef<string | undefined>;
    }, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
        state: {
            type: null;
            required: true;
        };
        config: {
            type: null;
            required: true;
        };
        markerStart: {
            type: StringConstructor;
            required: false;
            default: undefined;
        };
        markerEnd: {
            type: StringConstructor;
            required: false;
            default: undefined;
        };
    }>>, {
        markerStart: string;
        markerEnd: string;
    }>;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
    id: {
        type: StringConstructor;
        required: true;
    };
    state: {
        type: null;
        required: true;
    };
    sourcePos: {
        type: null;
        required: false;
        default: undefined;
    };
    targetPos: {
        type: null;
        required: false;
        default: undefined;
    };
}>>, {
    sourcePos: any;
    targetPos: any;
}>;
export default _sfc_main;
