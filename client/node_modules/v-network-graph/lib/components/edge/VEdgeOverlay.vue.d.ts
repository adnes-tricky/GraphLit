import type { EdgeConfig, StrokeStyle } from '../../common/configs';
import type { DefineComponent, Ref, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes } from 'vue';
import { Edge, EdgePosition, LinePosition, Point } from '../../common/types';
import { EdgeState } from '../../models/edge';
declare const _sfc_main: DefineComponent<{
    edgeId: {
        type: StringConstructor;
        required: false;
        default: undefined;
    };
    edge: {
        type: null;
        required: false;
        default: undefined;
    };
    edges: {
        type: null;
        required: false;
        default: () => {};
    };
    state: {
        type: null;
        required: true;
    };
    isSummarized: {
        type: BooleanConstructor;
        required: true;
    };
}, {
    props: any;
    svg: Ref<SVGElement>;
    scale: Ref<number>;
    edgeConfig: EdgeConfig<Edge>;
    getStrokeConfig: () => StrokeStyle;
    toEdgePosition: (line: LinePosition) => EdgePosition;
    calculateCenterPoint: (state: EdgeState) => Point;
    getPathTotalLength: () => number;
    calculatePointAtLength: (distance: number) => Point;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
    edgeId: {
        type: StringConstructor;
        required: false;
        default: undefined;
    };
    edge: {
        type: null;
        required: false;
        default: undefined;
    };
    edges: {
        type: null;
        required: false;
        default: () => {};
    };
    state: {
        type: null;
        required: true;
    };
    isSummarized: {
        type: BooleanConstructor;
        required: true;
    };
}>>, {
    edges: any;
    edge: any;
    edgeId: string;
}>;
export default _sfc_main;
