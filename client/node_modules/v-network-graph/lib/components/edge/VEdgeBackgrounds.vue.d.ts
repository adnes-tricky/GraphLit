import type { Layouts, EdgeConfig, Edge } from '../..';
import type { EdgeGroupStates } from '../../composables/state';
import type { EdgeStates } from '../../models/edge';
import type { DefineComponent, Ref, ComputedRef, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes } from 'vue';
declare const _sfc_main: DefineComponent<{}, {
    edgeStates: EdgeStates;
    edgeGroupStates: EdgeGroupStates;
    layouts: Layouts;
    VEdgeBackground: DefineComponent<{
        id: {
            type: StringConstructor;
            required: true;
        };
        state: {
            type: null;
            required: true;
        };
        sourcePos: {
            type: null;
            required: false;
            default: undefined;
        };
        targetPos: {
            type: null;
            required: false;
            default: undefined;
        };
    }, {
        props: any;
        scale: Ref<number>;
        config: EdgeConfig<Edge>;
        handleEdgePointerDownEvent: (edge: string, event: PointerEvent) => void;
        handleEdgePointerOverEvent: (edge: string, event: PointerEvent) => void;
        handleEdgePointerOutEvent: (edge: string, event: PointerEvent) => void;
        handleEdgeClickEvent: (edge: string, event: MouseEvent) => void;
        handleEdgeDoubleClickEvent: (edge: string, event: MouseEvent) => void;
        handleEdgeContextMenu: (edge: string, event: MouseEvent) => void;
        pathD: ComputedRef<string>;
        strokeWidth: ComputedRef<number>;
    }, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{
        id: {
            type: StringConstructor;
            required: true;
        };
        state: {
            type: null;
            required: true;
        };
        sourcePos: {
            type: null;
            required: false;
            default: undefined;
        };
        targetPos: {
            type: null;
            required: false;
            default: undefined;
        };
    }>>, {
        sourcePos: any;
        targetPos: any;
    }>;
}, {}, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<{}>>, {}>;
export default _sfc_main;
