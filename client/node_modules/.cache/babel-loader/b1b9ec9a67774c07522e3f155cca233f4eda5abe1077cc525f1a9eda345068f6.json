{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_network_graph = _resolveComponent(\"v-network-graph\");\n  return _openBlock(), _createBlock(_component_v_network_graph, {\n    class: \"graph\",\n    nodes: $data.nodes,\n    edges: $data.edges\n  }, null, 8 /* PROPS */, [\"nodes\", \"edges\"]);\n}","map":{"version":3,"mappings":";;;uBACIA,aAIEC;IAHAC,KAAK,EAAC,OAAO;IACZC,KAAK,EAAEC,WAAK;IACZC,KAAK,EAAED","names":["_createBlock","_component_v_network_graph","class","nodes","$data","edges"],"sourceRoot":"","sources":["D:\\5th sem\\Projects\\node_se_6\\client\\src\\components\\NetworkGraphView.vue"],"sourcesContent":["<template>\r\n    <v-network-graph\r\n      class=\"graph\"\r\n      :nodes=\"nodes\"\r\n      :edges=\"edges\"\r\n    />\r\n  </template>\r\n  \r\n  <script>\r\n  import { VNetworkGraph } from 'v-network-graph'\r\n  \r\n  export default {\r\n    components: {\r\n      VNetworkGraph\r\n    },\r\n    props: {\r\n      nodeData: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n      edgeData: {\r\n        type: Array,\r\n        required: true\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        nodes: {},\r\n        edges: {}\r\n      }\r\n    },\r\n    beforeMount() {\r\n      // Set nodes and edges data from props\r\n      this.nodes = this.nodeData.reduce((acc, node) => {\r\n        acc[node.id] = node;\r\n        return acc;\r\n      }, {});\r\n      this.edges = this.edgeData.reduce((acc, edge) => {\r\n        acc[edge.id] = edge;\r\n        return acc;\r\n      }, {});\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  .graph {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 1px solid #000;\r\n  }\r\n  </style>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}