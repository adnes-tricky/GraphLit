{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Image name\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Date\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Fetch Image\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    ref: \"form\",\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.fetchImage && $options.fetchImage(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"fetch_name\",\n    id: \"fetch_name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.fetch_name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.fetch_name]]), _hoisted_1]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    name: \"fetch_date\",\n    id: \"fetch_date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.fetch_date = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.fetch_date]]), _hoisted_2]), _createElementVNode(\"div\", null, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.image, index => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"img\", {\n      src: `data:image/jpeg;base64, ${index}`\n    }, null, 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 544 /* HYDRATE_EVENTS, NEED_PATCH */)]);\n}","map":{"version":3,"mappings":";gCAKGA,oBAAyB,eAAlB,YAAU;gCAIjBA,oBAAmB,eAAZ,MAAI;gCAGZA,oBAA0C;EAAlCC,IAAI,EAAC;AAAQ,GAAC,aAAW;;;uBAX/BC,oBAkBI,cAjBJF,oBAgBO;IAhBDG,GAAG,EAAC,MAAM;IAAEC,QAAM,wDAAUC,mDAAU;MAC9CL,oBAGM,8BAFLA,oBAAwF;IAAjFC,IAAI,EAAE,MAAM;IAACK,IAAI,EAAC,YAAY;IAACC,EAAE,EAAG,YAAY;+DAAUC,gBAAU;IAAEC,QAAQ,EAAR;iDAAZD,gBAAU,KAC3EE,UAAyB,IAE1BV,oBAGM,8BAFLA,oBAAwF;IAAjFC,IAAI,EAAE,MAAM;IAACK,IAAI,EAAC,YAAY;IAACC,EAAE,EAAG,YAAY;+DAAUC,gBAAU;IAAEC,QAAQ,EAAR;iDAAZD,gBAAU,KAC3EG,UAAmB,IAEpBX,oBAMM,cALNY,UAA0C,qBAC1CV,oBAEMW,6BAFeL,WAAK,EAAdM,KAAK;yBAAjBZ,oBAEM;MAFuBa,GAAG,EAAED;IAAK,IACtCd,oBAAgD;MAA1CgB,GAAG,6BAA6BF,KAAK","names":["_createElementVNode","type","_createElementBlock","ref","onSubmit","$options","name","id","$data","required","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","index","key","src"],"sourceRoot":"","sources":["D:\\5th sem\\Projects\\node_se_6\\client\\src\\components\\FetchImage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <form ref=\"form\" @submit.prevent=\"fetchImage\">\r\n\t\t<div>\t\r\n\t\t\t<input type =\"text\" name=\"fetch_name\" id = \"fetch_name\" v-model=\"fetch_name\" required />\r\n\t\t\t<label>Image name</label>\r\n\t\t</div>\r\n\t\t<div>\t\r\n\t\t\t<input type =\"date\" name=\"fetch_date\" id = \"fetch_date\" v-model=\"fetch_date\" required />\r\n\t\t\t<label>Date</label>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t<button type=\"submit\">Fetch Image</button>\r\n\t\t<div v-for=\"index in image\" :key=\"index\">\r\n\t\t\t<img :src=\"`data:image/jpeg;base64, ${index}`\"/>\r\n\t\t</div>\r\n\t\t\r\n\t\t</div>\r\n    </form>\r\n  </div> \r\n</template>\r\n<script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n          image: [],\r\n          fetch_name: \"\",\r\n          fetch_date: \"\"\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchImage() {\r\n\t\tthis.image=[]\r\n\t\tconst response=await axios.post('api/fetchImage',{\r\n\t\t\timage_name: this.fetch_name,\r\n\t\t\tcreated_date: this.fetch_date,\r\n\t\t})\r\n\t\t.catch(error =>{\r\n\t\t\tconsole.log(error);\r\n\t\t})\r\n\t\tif(response.status==200){\r\n\t\t\t// console.log(response);\r\n\t\t\tfor(let i=0;i<response.data.id.length;i++){\r\n\t\t\t\tconst response2 = await axios.get('api/uploadImage/' + response.data.id[i]);\r\n\t\t\t\tthis.image.push(response2.data.image)\r\n\t\t\t}\r\n\r\n\t\t\tthis.fetch_name=\"\";\r\n\t\t\tthis.fetch_date=\"\";\r\n\t\t\tthis.$refs.form.reset();\r\n\r\n\t\t\t\r\n\t\t} \r\n      }\r\n    }\r\n  };\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}