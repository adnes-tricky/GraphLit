{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Image name\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Category\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Keywords\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Date\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Upload Image\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    ref: \"form\",\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.uploadImage && $options.uploadImage(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" <input type=\\\"file\\\" ref=\\\"fileInput\\\" @change=\\\"handleFileChange\\\"/>\\r\\n      <img :src=\\\"imagePreview\\\"/> \"), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.previewImage && $options.previewImage(...args)),\n    multiple: \"\"\n  }, null, 32 /* HYDRATE_EVENTS */), _createCommentVNode(\" <img v-if=\\\"preview\\\" :src=\\\"preview\\\"/> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.previewUrls, (url, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"img\", {\n      src: url,\n      alt: \"Preview Image\"\n    }, null, 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"image_name\",\n    id: \"image_name\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.image_name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.image_name]])]), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"category\",\n    id: \"category\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.category = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.category]])]), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"keywords\",\n    id: \"keywords\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.keywords = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.keywords]])]), _createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    name: \"create_date\",\n    id: \"create_date\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.created_date = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.created_date]])]), _hoisted_6], 544 /* HYDRATE_EVENTS, NEED_PATCH */)]);\n}","map":{"version":3,"mappings":";;gCAWIA,oBAAyB,eAAlB,YAAU;gCAIjBA,oBAAuB,eAAhB,UAAQ;gCAIfA,oBAAuB,eAAhB,UAAQ;gCAIXA,oBAAmB,eAAZ,MAAI;gCAGbA,oBAA2C;EAAnCC,IAAI,EAAC;AAAQ,GAAC,cAAY;;;uBAzBtCC,oBA2BM,cA1BJF,oBAyBO;IAzBDG,GAAG,EAAC,MAAM;IAAEC,QAAM,wDAAUC,qDAAW;MAC3CC,oIAC8B,EAC9BN,oBAAoD;IAA7CC,IAAI,EAAC,MAAM;IAAEM,QAAM,yCAAEF,uDAAY;IAAEG,QAAQ,EAAR;qCAC1CF,iEAA6C,qBAC7CJ,oBAEMO,6BAFsBC,iBAAW,GAA1BC,GAAG,EAAEC,KAAK;yBAAvBV,oBAEM;MAFoCW,GAAG,EAAED;IAAK,IAClDZ,oBAAsC;MAAhCc,GAAG,EAAEH,GAAG;MAAEI,GAAG,EAAC;;kCAEtBf,oBAGG,cAFLgB,UAAyB,kBACzBhB,oBAAuF;IAAhFC,IAAI,EAAE,MAAM;IAACgB,IAAI,EAAC,YAAY;IAACC,EAAE,EAAG,YAAY;+DAAUR,gBAAU;IAAES,QAAQ,EAAR;iDAAZT,gBAAU,OAEzEV,oBAGG,cAFLoB,UAAuB,kBACvBpB,oBAAyE;IAAlEC,IAAI,EAAE,MAAM;IAACgB,IAAI,EAAC,UAAU;IAACC,EAAE,EAAG,UAAU;+DAAUR,cAAQ;iDAARA,cAAQ,OAEnEV,oBAGG,cAFLqB,UAAuB,kBACvBrB,oBAAyE;IAAlEC,IAAI,EAAE,MAAM;IAACgB,IAAI,EAAC,UAAU;IAACC,EAAE,EAAG,UAAU;+DAAUR,cAAQ;iDAARA,cAAQ,OAEnEV,oBAGG,cAFDsB,UAAmB,kBACvBtB,oBAA2F;IAApFC,IAAI,EAAE,MAAM;IAACgB,IAAI,EAAC,aAAa;IAACC,EAAE,EAAG,aAAa;+DAAUR,kBAAY;IAAES,QAAQ,EAAR;iDAAdT,kBAAY,OAE7Ea,UAA2C","names":["_createElementVNode","type","_createElementBlock","ref","onSubmit","$options","_createCommentVNode","onChange","multiple","_Fragment","$data","url","index","key","src","alt","_hoisted_2","name","id","required","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6"],"sourceRoot":"","sources":["D:\\5th sem\\Projects\\node_se_6\\client\\src\\components\\FileUpload.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form ref=\"form\" @submit.prevent=\"uploadImage\">\r\n      <!-- <input type=\"file\" ref=\"fileInput\" @change=\"handleFileChange\"/>\r\n      <img :src=\"imagePreview\"/> -->\r\n      <input type=\"file\" @change=\"previewImage\" multiple/>\r\n      <!-- <img v-if=\"preview\" :src=\"preview\"/> -->\r\n      <div v-for=\"(url, index) in previewUrls\" :key=\"index\">\r\n        <img :src=\"url\" alt=\"Preview Image\" />\r\n      </div>\r\n      <div>\t\r\n\t\t\t\t<label>Image name</label>\r\n\t\t\t\t<input type =\"text\" name=\"image_name\" id = \"image_name\" v-model=\"image_name\" required/>\r\n\t\t\t</div>\r\n      <div>\t\r\n\t\t\t\t<label>Category</label>\r\n\t\t\t\t<input type =\"text\" name=\"category\" id = \"category\" v-model=\"category\" />\r\n\t\t\t</div>\r\n      <div>\t\r\n\t\t\t\t<label>Keywords</label>\r\n\t\t\t\t<input type =\"text\" name=\"keywords\" id = \"keywords\" v-model=\"keywords\" />\r\n\t\t\t</div>\r\n      <div>\t\r\n        <label>Date</label>\r\n\t\t\t\t<input type =\"date\" name=\"create_date\" id = \"create_date\" v-model=\"created_date\" required/>\r\n\t\t\t</div>\r\n      <button type=\"submit\">Upload Image</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      file: [],\r\n      previewUrls: [],\r\n      image_name: \"\",\r\n      imageName: \"images\",\r\n      category: \"\",\r\n      keywords: \"\",\r\n      created_date: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    previewImage(event) {\r\n      this.file = event.target.files;\r\n      for (let i = 0; i < this.file.length; i++) {\r\n        const imgfile = this.file[i];\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n        this.previewUrls.push(event.target.result);\r\n        };\r\n        reader.readAsDataURL(imgfile);\r\n      }\r\n    },\r\n    uploadImage() {\r\n      const batchSize=10;\r\n      const numItems= this.file.length;\r\n      const numBatches= Math.ceil(numItems/batchSize);\r\n      const files=[];\r\n      for(let i=0;i<this.file.length;i++){\r\n        files.push(this.file[i]);\r\n      }\r\n      for (let i = 0; i < numBatches; i++) {\r\n        const start = i * batchSize;\r\n        const end = Math.min((i + 1) * batchSize, numItems);\r\n        const batch =files.slice(start, end);\r\n        \r\n        let formData = new FormData();\r\n        formData.append('imageName', this.imageName);\r\n        formData.append('image_name',this.image_name);\r\n        formData.append('category', this.category);\r\n        formData.append('keywords', this.keywords);\r\n        formData.append('created_date', this.created_date);\r\n        for(let j=0;j<batchSize;j++){\r\n          formData.append('file', batch[j]);  \r\n        }\r\n        //console.log(formData.image_name);\r\n        axios.post('/api/uploadImage', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        })\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.prevPermit=false;\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        }); \r\n      }\r\n      this.file=[]\r\n      this.previewUrls=[]\r\n      this.image_name=\"\"\r\n      this.category=\"\"\r\n      this.keywords=\"\"\r\n      this.created_date=\"\"\r\n      this.$refs.form.reset()\r\n    },\r\n  },\r\n  \r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}