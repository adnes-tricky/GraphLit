{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, createTextVNode as _createTextVNode, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Search\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Search\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Search Word\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Image Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Created Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Category\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Keywords\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_network_graph = _resolveComponent(\"v-network-graph\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    ref: \"form\",\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"searchword\",\n    id: \"searchword\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchword = $event),\n    placeholder: \"Searchword\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchword]]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    name: \"category\",\n    id: \"category\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.category = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.category]]), _createTextVNode(\" Category \")]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    name: \"keyword\",\n    id: \"keyword\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.keyword = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.keyword]]), _createTextVNode(\" Keyword \")]), _hoisted_3], 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createCommentVNode(\"Network Graph componenet\"), _createVNode(_component_v_network_graph, {\n    data: $data.graphData,\n    options: _ctx.graphOptions\n  }, null, 8 /* PROPS */, [\"data\", \"options\"]), _createElementVNode(\"table\", null, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.resTable, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.searchword), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.imagename), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.created_date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.category), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.keywords), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAQ;gCAEfC,oBAAe,YAAX,QAAM;gCAUVA,oBAAsC;EAA9BC,IAAI,EAAE;AAAQ,GAAC,QAAM;gCAM7BD,oBAQQ,6BAPJA,oBAMK,0BALDA,oBAAoB,YAAhB,aAAW,gBACfA,oBAAmB,YAAf,YAAU,gBACdA,oBAAqB,YAAjB,cAAY,gBAChBA,oBAAiB,YAAb,UAAQ,gBACZA,oBAAiB,YAAb,UAAQ;;;;uBAxBxBE,oBAsCM,OAtCNC,UAsCM,GArCJH,oBAYS;IAZHI,GAAG,EAAC,MAAM;IAAEC,QAAM,wDAAUC,mDAAU;MAC1CC,UAAe,kBACfP,oBAAsG;IAA/FC,IAAI,EAAC,MAAM;IAACO,IAAI,EAAC,YAAY;IAACC,EAAE,EAAG,YAAY;+DAAUC,gBAAU;IAAEC,WAAW,EAAC;iDAAxBD,gBAAU,KAC1EV,oBAGQ,gCAFJA,oBAAyE;IAAlEC,IAAI,EAAC,UAAU;IAACO,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,UAAU;+DAAUC,cAAQ;qDAARA,cAAQ,sBAAG,YAE7E,KACAV,oBAGQ,gCAFJA,oBAAsE;IAA/DC,IAAI,EAAC,UAAU;IAACO,IAAI,EAAC,SAAS;IAACC,EAAE,EAAC,SAAS;+DAAUC,aAAO;qDAAPA,aAAO,sBAAG,WAE1E,KACAE,UAAsC,0CAGtCC,+CAA+B,EAC/BC,aAA6DC;IAA3CC,IAAI,EAAEN,eAAS;IAAGO,OAAO,EAAEC;gDAC7ClB,oBAoBQ,gBAnBRmB,UAQQ,EAERnB,oBAQQ,mCAPJE,oBAMKkB,6BANuBV,cAAQ,GAAxBW,IAAI,EAAEC,KAAK;yBAAvBpB,oBAMK;MANkCqB,GAAG,EAAED;IAAK,IAC7CtB,oBAA8B,6BAAvBqB,IAAI,CAACG,UAAU,kBACtBxB,oBAA6B,6BAAtBqB,IAAI,CAACI,SAAS,kBACrBzB,oBAAgC,6BAAzBqB,IAAI,CAACK,YAAY,kBACxB1B,oBAA4B,6BAArBqB,IAAI,CAACM,QAAQ,kBACpB3B,oBAA4B,6BAArBqB,IAAI,CAACO,QAAQ","names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","ref","onSubmit","$options","_hoisted_2","name","id","$data","placeholder","_hoisted_3","_createCommentVNode","_createVNode","_component_v_network_graph","data","options","_ctx","_hoisted_4","_Fragment","item","index","key","searchword","imagename","created_date","category","keywords"],"sourceRoot":"","sources":["D:\\5th sem\\Projects\\node_se_6\\client\\src\\views\\SearchGraphView.vue"],"sourcesContent":["<template>\r\n    <div class=\"search\">\r\n      <form ref=\"form\" @submit.prevent=\"submitForm\">\r\n        <h1>Search</h1>\r\n        <input type=\"text\" name=\"searchword\" id = \"searchword\" v-model=\"searchword\" placeholder=\"Searchword\"/>\r\n        <label>\r\n            <input type=\"checkbox\" name=\"category\" id=\"category\" v-model=\"category\"/>\r\n            Category\r\n        </label>\r\n        <label>\r\n            <input type=\"checkbox\" name=\"keyword\" id=\"keyword\" v-model=\"keyword\"/>\r\n            Keyword\r\n        </label>\r\n        <button type =\"submit\">Search</button>\r\n        </form>\r\n\r\n        <!--Network Graph componenet-->\r\n        <v-network-graph :data=\"graphData\" :options=\"graphOptions\" />\r\n        <table>\r\n        <thead>\r\n            <tr>\r\n                <th>Search Word</th>\r\n                <th>Image Name</th>\r\n                <th>Created Date</th>\r\n                <th>Category</th>\r\n                <th>Keywords</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <tr v-for=\"(item, index) in resTable\" :key=\"index\">\r\n                <td>{{ item.searchword }}</td>    \r\n                <td>{{ item.imagename }}</td>\r\n                <td>{{ item.created_date }}</td>\r\n                <td>{{ item.category }}</td>\r\n                <td>{{ item.keywords }}</td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { VNetworkGraph } from 'v-network-graph';\r\nimport \"v-network-graph/lib/style.css\";\r\n\r\nexport default{\r\n    name: 'searchWord',\r\n    components: {\r\n    VNetworkGraph,\r\n  },\r\n    data() {\r\n        return{\r\n            response: '',\r\n            category: false,\r\n            keyword: false,\r\n            searchword: '',\r\n            resTable: [],\r\n\r\n            graphData: {\r\n            nodes: [\r\n            { id: '1', label: 'Node 1' },\r\n            { id: '2', label: 'Node 2' },\r\n            { id: '3', label: 'Node 3' },\r\n            ],\r\n            links: [\r\n            { source: '1', target: '2' },\r\n            { source: '1', target: '3' },\r\n            { source: '2', target: '3' },\r\n            ],\r\n            },\r\n\r\n\r\n        }\r\n    },\r\n    methods: {\r\n            async submitForm(){\r\n                var res=[]\r\n                this.resTable=[]\r\n                await axios.post('api/searchGraphKeyword',{\r\n                    searchword: this.searchword,\r\n                    category:this.category,\r\n                    keyword: this.keyword\r\n                })\r\n                .then(function(response){\r\n                    if(response.status==200){\r\n                    res=response.data; //copy list of records from backend to global variable\r\n                    }\r\n                })\r\n                .catch(error =>{\r\n                    console.log(error);\r\n                })  \r\n                // Reset form fields\r\n                this.searchword = '';\r\n                this.category = false;\r\n                this.keyword = false;\r\n                this.$refs.form.reset();\r\n                // clear the input values for the form data fields\r\n                this.resTable=this.resTable.concat(res) \r\n            }\r\n        }\r\n}\r\n</script>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}