{"ast":null,"code":"import { VNetworkGraph } from 'v-network-graph';\nexport default {\n  components: {\n    VNetworkGraph\n  },\n  props: {\n    nodeData: {\n      type: Array,\n      required: true\n    },\n    edgeData: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      nodes: {},\n      edges: {}\n    };\n  },\n  beforeMount() {\n    // Set nodes and edges data from props\n    this.nodes = this.nodeData.reduce((acc, node) => {\n      acc[node.id] = node;\n      return acc;\n    }, {});\n    this.edges = this.edgeData.reduce((acc, edge) => {\n      acc[edge.id] = edge;\n      return acc;\n    }, {});\n  }\n};","map":{"version":3,"mappings":"AASE,SAASA,aAAY,QAAS,iBAAgB;AAE9C,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDE,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC,CAAC;MACTC,KAAK,EAAE,CAAC;IACV;EACF,CAAC;EACDC,WAAW,GAAG;IACZ;IACA,IAAI,CAACF,KAAI,GAAI,IAAI,CAACN,QAAQ,CAACS,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;MAC/CD,GAAG,CAACC,IAAI,CAACC,EAAE,IAAID,IAAI;MACnB,OAAOD,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IACN,IAAI,CAACH,KAAI,GAAI,IAAI,CAACH,QAAQ,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEG,IAAI,KAAK;MAC/CH,GAAG,CAACG,IAAI,CAACD,EAAE,IAAIC,IAAI;MACnB,OAAOH,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACR;AACF","names":["VNetworkGraph","components","props","nodeData","type","Array","required","edgeData","data","nodes","edges","beforeMount","reduce","acc","node","id","edge"],"sourceRoot":"","sources":["D:\\5th sem\\Projects\\node_se_6\\client\\src\\components\\NetworkGraphView.vue"],"sourcesContent":["<template>\r\n    <v-network-graph\r\n      class=\"graph\"\r\n      :nodes=\"nodes\"\r\n      :edges=\"edges\"\r\n    />\r\n  </template>\r\n  \r\n  <script>\r\n  import { VNetworkGraph } from 'v-network-graph'\r\n  \r\n  export default {\r\n    components: {\r\n      VNetworkGraph\r\n    },\r\n    props: {\r\n      nodeData: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n      edgeData: {\r\n        type: Array,\r\n        required: true\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        nodes: {},\r\n        edges: {}\r\n      }\r\n    },\r\n    beforeMount() {\r\n      // Set nodes and edges data from props\r\n      this.nodes = this.nodeData.reduce((acc, node) => {\r\n        acc[node.id] = node;\r\n        return acc;\r\n      }, {});\r\n      this.edges = this.edgeData.reduce((acc, edge) => {\r\n        acc[edge.id] = edge;\r\n        return acc;\r\n      }, {});\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  .graph {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 1px solid #000;\r\n  }\r\n  </style>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}