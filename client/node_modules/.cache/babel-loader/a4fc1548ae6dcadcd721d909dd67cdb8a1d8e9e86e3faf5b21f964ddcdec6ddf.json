{"ast":null,"code":"import axios from 'axios';\nconst nodes = {\n  node1: {\n    name: \"Node 1\"\n  },\n  node2: {\n    name: \"Node 2\"\n  },\n  node3: {\n    name: \"Node 3\"\n  },\n  node4: {\n    name: \"Node 4\"\n  }\n};\nconst edges = {\n  edge1: {\n    source: \"node1\",\n    target: \"node2\"\n  },\n  edge2: {\n    source: \"node2\",\n    target: \"node3\"\n  },\n  edge3: {\n    source: \"node3\",\n    target: \"node4\"\n  }\n};\nexport default {\n  name: 'searchWord',\n  data() {\n    return {\n      response: '',\n      category: false,\n      keyword: false,\n      searchword: '',\n      resTable: []\n    };\n  },\n  methods: {\n    async submitForm() {\n      var res = [];\n      this.resTable = [];\n      await axios.post('api/searchGraphKeyword', {\n        searchword: this.searchword,\n        category: this.category,\n        keyword: this.keyword\n      }).then(function (response) {\n        if (response.status == 200) {\n          res = response.data; //copy list of records from backend to global variable\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      // Reset form fields\n      this.searchword = '';\n      this.category = false;\n      this.keyword = false;\n      this.$refs.form.reset();\n      // clear the input values for the form data fields\n      this.resTable = this.resTable.concat(res);\n    }\n  }\n};","map":{"version":3,"mappings":"AAyCA,OAAOA,KAAI,MAAO,OAAM;AACxB,MAAMC,KAAI,GAAI;EACVC,KAAK,EAAE;IAAEC,IAAI,EAAE;EAAS,CAAC;EACzBC,KAAK,EAAE;IAAED,IAAI,EAAE;EAAS,CAAC;EACzBE,KAAK,EAAE;IAAEF,IAAI,EAAE;EAAS,CAAC;EACzBG,KAAK,EAAE;IAAEH,IAAI,EAAE;EAAS;AAC1B;AAEA,MAAMI,KAAI,GAAI;EACZC,KAAK,EAAE;IAAEC,MAAM,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAQ,CAAC;EAC3CC,KAAK,EAAE;IAAEF,MAAM,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAQ,CAAC;EAC3CE,KAAK,EAAE;IAAEH,MAAM,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAQ;AAC5C;AACF,eAAc;EACVP,IAAI,EAAE,YAAY;EAClBU,IAAI,GAAG;IACH,OAAM;MACFC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE,KAAK;MACdC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,OAAO,EAAE;IACD,MAAMC,UAAU,GAAE;MACd,IAAIC,GAAG,GAAC,EAAC;MACT,IAAI,CAACH,QAAQ,GAAC,EAAC;MACf,MAAMlB,KAAK,CAACsB,IAAI,CAAC,wBAAwB,EAAC;QACtCL,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BF,QAAQ,EAAC,IAAI,CAACA,QAAQ;QACtBC,OAAO,EAAE,IAAI,CAACA;MAClB,CAAC,EACAO,IAAI,CAAC,UAAST,QAAQ,EAAC;QACpB,IAAGA,QAAQ,CAACU,MAAM,IAAE,GAAG,EAAC;UACxBH,GAAG,GAACP,QAAQ,CAACD,IAAI,EAAE;QACnB;MACJ,CAAC,EACAY,KAAK,CAACC,KAAI,IAAI;QACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC;MACD;MACA,IAAI,CAACT,UAAS,GAAI,EAAE;MACpB,IAAI,CAACF,QAAO,GAAI,KAAK;MACrB,IAAI,CAACC,OAAM,GAAI,KAAK;MACpB,IAAI,CAACa,KAAK,CAACC,IAAI,CAACC,KAAK,EAAE;MACvB;MACA,IAAI,CAACb,QAAQ,GAAC,IAAI,CAACA,QAAQ,CAACc,MAAM,CAACX,GAAG;IAC1C;EACJ;AACR","names":["axios","nodes","node1","name","node2","node3","node4","edges","edge1","source","target","edge2","edge3","data","response","category","keyword","searchword","resTable","methods","submitForm","res","post","then","status","catch","error","console","log","$refs","form","reset","concat"],"sourceRoot":"","sources":["D:\\5th sem\\Projects\\node_se_6\\client\\src\\views\\SearchGraphView.vue"],"sourcesContent":["<template>\r\n    <div class=\"search\">\r\n      <form ref=\"form\" @submit.prevent=\"submitForm\">\r\n        <h1>Search</h1>\r\n        <input type=\"text\" name=\"searchword\" id = \"searchword\" v-model=\"searchword\" placeholder=\"Searchword\"/>\r\n        <label>\r\n            <input type=\"checkbox\" name=\"category\" id=\"category\" v-model=\"category\"/>\r\n            Category\r\n        </label>\r\n        <label>\r\n            <input type=\"checkbox\" name=\"keyword\" id=\"keyword\" v-model=\"keyword\"/>\r\n            Keyword\r\n        </label>\r\n        <button type =\"submit\">Search</button>\r\n        </form>\r\n\r\n        <table>\r\n        <thead>\r\n            <tr>\r\n                <th>Search Word</th>\r\n                <th>Image Name</th>\r\n                <th>Created Date</th>\r\n                <th>Category</th>\r\n                <th>Keywords</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <tr v-for=\"(item, index) in resTable\" :key=\"index\">\r\n                <td>{{ item.searchword }}</td>    \r\n                <td>{{ item.imagename }}</td>\r\n                <td>{{ item.created_date }}</td>\r\n                <td>{{ item.category }}</td>\r\n                <td>{{ item.keywords }}</td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nconst nodes = {\r\n    node1: { name: \"Node 1\" },\r\n    node2: { name: \"Node 2\" },\r\n    node3: { name: \"Node 3\" },\r\n    node4: { name: \"Node 4\" },\r\n  }\r\n\r\n  const edges = {\r\n    edge1: { source: \"node1\", target: \"node2\" },\r\n    edge2: { source: \"node2\", target: \"node3\" },\r\n    edge3: { source: \"node3\", target: \"node4\" },\r\n  }\r\nexport default{\r\n    name: 'searchWord',\r\n    data() {\r\n        return{\r\n            response: '',\r\n            category: false,\r\n            keyword: false,\r\n            searchword: '',\r\n            resTable: []\r\n        }\r\n    },\r\n    methods: {\r\n            async submitForm(){\r\n                var res=[]\r\n                this.resTable=[]\r\n                await axios.post('api/searchGraphKeyword',{\r\n                    searchword: this.searchword,\r\n                    category:this.category,\r\n                    keyword: this.keyword\r\n                })\r\n                .then(function(response){\r\n                    if(response.status==200){\r\n                    res=response.data; //copy list of records from backend to global variable\r\n                    }\r\n                })\r\n                .catch(error =>{\r\n                    console.log(error);\r\n                })  \r\n                // Reset form fields\r\n                this.searchword = '';\r\n                this.category = false;\r\n                this.keyword = false;\r\n                this.$refs.form.reset();\r\n                // clear the input values for the form data fields\r\n                this.resTable=this.resTable.concat(res) \r\n            }\r\n        }\r\n}\r\n</script>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}